
EXPLICIT CURSOR :

* For Sql Statements Return A Multiple Records Is Called Explicit Cursors .
* Explicit Cursor Is Also Called As Active Set Memory Area .
* In Explicit Cursor We Are Storing The Multiple Records And 
Also These Records Are Controlled By The Database Developers Explicitly But The Database Developers Cannot Control The Implicit Cursor Memory Area .

EXPLICIT CURSOR LIFECYCLE

  I)	 DECLARE
 II)	 OPEN
III)     FETCH
 IV)	 CLOSE

DECLARE :
--------
In Declare Section Of Pl/Sql Block We Are Defining Cursor Using Following

  SYNTAX:
----------
            Cursor Cursor_Name Is Select */Col_Name From Table_Name;

OPEN :
------
Whenever We Are Opening The Cursor Then Only Oracle Server Fetch Data From The Table Into Cursor Memory Area ,
Because Whenever Opening The Cursor Then Only Cursor Select Statements Are Executed.

SYNTAX:
------
    OPEN CURSOR_NAME ;

FETCH :
----------
Using Fetch Statements ( Fetching From Cursor ) We Are Fetching The Data From The Cursor Into Pl/Sql Variables .

SYNTAX:
-----------
    Fetch Cursor_Name Into Variable1 ,Variable2 â€¦.;

CLOSE :
----------
When We Are Closing The Cursor All The Resources Allocated From Cursor Memory Area Automatically Released  .

SYNTAX:
----------------
      Close Cursor_Name;

EXAMPLE:
------------------
WA-PLSQL program to fetch than name and salary of all the employees .


DECLARE
    V_NAME VARCHAR(20);
    V_SAL NUMBER ;
    CURSOR C1 IS SELECT ENAME,SAL FROM EMP ;
BEGIN
   OPEN C1 ;
      FETCH C1 INTO V_NAME ,V_SAL ;
         DBMS_OUTPUT.PUT_LINE(V_NAME||' ' ||V_SAL);
   CLOSE C1;
END ;
/


O/P:
SMITH 800

notes :
  fetch statments always return a single record or value to fetch multiple record we can use multiple fetch statments 

DECLARE
    V_NAME VARCHAR(20);
    V_SAL NUMBER ;
    CURSOR C1 IS SELECT ENAME,SAL FROM EMP ;
BEGIN
   OPEN C1 ;
      FETCH C1 INTO V_NAME ,V_SAL ;
         DBMS_OUTPUT.PUT_LINE(V_NAME||' ' ||V_SAL);
      FETCH C1 INTO V_NAME ,V_SAL ;
         DBMS_OUTPUT.PUT_LINE(V_NAME||' ' ||V_SAL);
   CLOSE C1;
END ;
/



O/P:
SMITH 800
ALLEN 1600


EXPLICIT CURSOR ATTRIBUTES:
---------------------------

Every Explicit Cursor Having Following Four Attributes:

1) %FOUND
2) %NOTFOUND
3) %ISOPEN
4) %ROWCOUNT

All These Cursor Attributes Using Along With Cursor Name Only.

SYNTAX: 

    Cursor_Name%Attribute_Name 


1. %NOTFOUND
    It Returns `TRUE` if the data is not exists in the  `FETCH` statments.

   Syntax: 
            Cursor_Name%NOTFOUND

2. %FOUND  
   It Returns `TRUE` if the data is exists in the  `FETCH` statments.

   Syntax:
            Cursor_Name%FOUND

3. %ISOPEN  
  It Returns `TRUE` if the cursor is currently open. Returns `FALSE` if the cursor is closed.

   Syntax: 
            Cursor_Name%ISOPEN

4. %ROWCOUNT 
   Returns the number of rows fetched so far from the cursor.

   Syntax: 
            Cursor_Name%ROWCOUNT
-----------------------------------------------------------------------------
   

1) DISPLAY ALL THE RECORDS FROM EMP TABLE USING EXPLICIT CURSOR LIFECYCLE?

DECLARE
    V_NAME VARCHAR(20);
    V_SAL NUMBER ;
    CURSOR C1 IS SELECT ENAME,SAL FROM EMP ;
BEGIN
     OPEN C1 ;
       LOOP
          FETCH C1 INTO V_NAME ,V_SAL ;
          EXIT WHEN C1%NOTFOUND ;
            DBMS_OUTPUT.PUT_LINE(V_NAME||' ' ||V_SAL);
       END LOOP;
     CLOSE C1;
END ;
/

O/P :
IT RETURNS ALL THE RECORDS FROM THE TABLE 


1) Write A Pl/SQL Cursor Program To Display Number Of Rows Fetched From Emp Table Using %Rowcount Attributes

DECLARE
    I EMP%ROWTYPE ;
    CURSOR C1 IS SELECT * FROM EMP ;
BEGIN
    OPEN C1 ;
       FETCH C1 INTO I ;
         DBMS_OUTPUT.PUT_LINE(I.ENAME||' ' ||I.SAL);
       FETCH C1 INTO I ;
         DBMS_OUTPUT.PUT_LINE(I.ENAME||' ' ||I.SAL);
            DBMS_OUTPUT.PUT_LINE( ' NO OF RECORDS FETCHED FROM THE CURSOR IS  ' || C1%ROWCOUNT );
      CLOSE C1;
END ;
/


O/P:
SMITH 800
ALLEN 1600
NO OF RECORDS FETCHED FROM THE CURSOR IS  2


2) Write A Pl/Sql Cursor Program To Diisplay Even Number Of Rows From Emp Table Using %Rowcount Attributes

DECLARE
    I EMP%ROWTYPE ;
    CURSOR C1 IS SELECT * FROM EMP ;
BEGIN
    OPEN C1 ;
       LOOP
         FETCH C1 INTO I ;
         EXIT WHEN C1%NOTFOUND ;
            IF MOD(C1%ROWCOUNT,2)=0 THEN
               DBMS_OUTPUT.PUT_LINE(I.ENAME||' ' ||I.SAL);
            END IF ;
        END LOOP;
    CLOSE C1;
END ;
/

O/P
ALLEN 1600
JONES 2975
BLAKE 2850
SCOTT 3000
TURNER 1500
JAMES 950
MILLER 1300

3) Waqtd Name And Salary Of The Employees Who Is Earning More Than 2000

DECLARE
    I EMP%ROWTYPE ;
    CURSOR C1 IS SELECT * FROM EMP ;
BEGIN
    OPEN C1 ;
        LOOP
           FETCH C1 INTO I ;
            EXIT WHEN C1%NOTFOUND ;
               IF I.SAL>2000 THEN
                    DBMS_OUTPUT.PUT_LINE(I.ENAME||' ' ||I.SAL);
              END IF ;
          END LOOP;
    CLOSE C1;
END ;
/

O/P:
JONES 2975
BLAKE 2850
CLARK 2450
SCOTT 3000
KING 5000
FORD 3000


NOTES:
These Explicit Cursor Are Also Used To Transfer The Data One Oracle Table Another Oracle Table

EXAMPLE:

CREATE TABLE TARGET
(
NAME VARCHAR(20),
SAL NUMBER
);


DECLARE
    CURSOR C1 IS SELECT * FROM EMP;
     I EMP%ROWTYPE ;
BEGIN
     OPEN C1 ;
        LOOP
            FETCH C1 INTO I ;
            EXIT WHEN C1%NOTFOUND ;
               INSERT INTO TARGET VALUES(I.ENAME,I.SAL);
           COMMIT ;
        END LOOP;
    CLOSE C1;
END ;
/

SELECT * FROM TARGET;


ASSIGNMENTS :
--------------


1.WAQTD THE ANNUAL SALARY OF THE EMPLOYEE WHOS NAME IS SMITH
              
         DECLARE 
            V_NAME VARCHAR(25);
            V_SAL NUMBER(10);
            CURSOR C1 IS SELECT ENAME, SAL*12 FROM EMP WHERE ENAME = 'SMITH';
         BEGIN 
             OPEN C1;
             FETCH C1 INTO V_NAME , V_SAL ;
             DBMS_OUTPUT.PUT_LINE(V_NAME || ' '||V_SAL);
             CLOSE C1;
         END ;
         /  
  

2.WAQTD NAME OF THE EMPLOYEES WORKING AS CLERK 
            DECLARE 
                V_NAME  EMP.ENAME%TYPE;
                V_JOB   EMP.JOB%TYPE;
                CURSOR C1 IS SELECT ENAME , JOB FROM EMP WHERE JOB = 'CLERK';
             BEGIN 
                OPEN C1;
                LOOP 
                   FETCH C1 INTO V_NAME, V_JOB ;
                    EXIT WHEN C1%NOTFOUND ;
                    DBMS_OUTPUT.PUT_LINE(V_NAME || ' '|| V_JOB);
                   END LOOP;
                 CLOSE C1;
                 END ;
                  /
                    
                   
3.WAQTD SALARY OF THE EMPLOYEES WHO ARE WORKING AS    SALESMAN

     DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE JOB = 'SALESMAN' ;
      BEGIN 
          OPEN C1;
          LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.ENAME || ' '|| I.JOB || ' ' || I.SAL);
          END LOOP;
          CLOSE C1;
      END;
      /
         
4.WAQTD NAME AND SALARY  OF THE EMP WHO EARNS MORE THAN 2000
        
        DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE SAL > 2000 ;
      BEGIN 
          OPEN C1;
          LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.ENAME || ' '|| I.JOB || ' ' || I.SAL);
          END LOOP;
          CLOSE C1;
      END;
      /

5.WAQTD SAL AND JOB OF THE EMP WHOS NAME IS JONES
       
      DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE ENAME = 'JONES' ;
      BEGIN 
          OPEN C1;
          LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.ENAME || ' '|| I.JOB || ' ' || I.SAL);
          END LOOP;
          CLOSE C1;
      END;
      /

            
6.WAQTD NAME ,SAL AND HIREDATE OF THE EMP WHO WAS HIRED AFTER 01-JAN-81


      DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE HIREDATE > '01-JAN-81' ;
      BEGIN 
          OPEN C1;
          LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.ENAME || ' '|| I.SAL ||' '||I.HIREDATE);
          END LOOP;
             DBMS_OUTPUT.PUT_LINE(C1%ROWCOUNT);
          CLOSE C1;
      END;
      /        

7.WAQTD NAME AND SAL ALONG WITH HIS ANNUAL SALARY IF THE ANNUAL SALARY IS MORE THAN 12000

        DECLARE
            V_NAME EMP.ENAME%TYPE;
            V_SAL  EMP.SAL%TYPE;
            V_ASAL EMP.SAL%TYPE;
            
            CURSOR C1 IS SELECT ENAME,SAL,SAL*12 AS ANUALSAL FROM EMP  WHERE ANUALSAL > 12000;
        BEGIN 
            OPEN C1;
            LOOP 
               FETCH C1 INTO V_NAME,V_SAL,V_ASAL;
               EXIT WHEN C1%NOTFOUND;
               DBMS_OUTPUT.PUT_LINE(V_NAME || ' '|| V_SAL ||' '||V_ASAL);
            END LOOP;
            CLOSE C1;
        END;
        /
               
              
8.WAQTD EMPNO OF THE EMPLOYEES WHO ARE WORKING IN DEPT    30 
  
      DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE DEPTNO IN(30) ;
      BEGIN 
          OPEN C1;
          LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.EMPNO);
          END LOOP;
             DBMS_OUTPUT.PUT_LINE(C1%ROWCOUNT);
          CLOSE C1;
      END;
      /     
         
9.WAQTD ENAME AND HIREDATE IF THEY ARE HIRED BEFORE 1981.
     
         DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE HIREDATE < '01-JAN-1981' ;
         BEGIN 
          OPEN C1;
         LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.ENAME || ' '||I.HIREDATE);
          END LOOP;
             DBMS_OUTPUT.PUT_LINE(C1%ROWCOUNT);
          CLOSE C1;
      END;
      /     
      
           

10.WAQTD NAME ,SAL ,DEPTNO AND JOB  OF THE EMPLOYEES WORKING AS MANAGER
 
     DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE JOB IN('MANAGER');
         BEGIN 
          OPEN C1;
         LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.ENAME || ' '||I.SAL ||' '||I.DEPTNO||' '||I.JOB );
          END LOOP;
             DBMS_OUTPUT.PUT_LINE(C1%ROWCOUNT);
          CLOSE C1;
      END;
      /     

         
11.WAQTD NAME AND SALARY GIVEN TO AN EMPLOYEE IF       EMPLOYEE EARNS  A COMMISSION OF RUPEES 1400 

         DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE COMM IN (1400);
         BEGIN 
          OPEN C1;
         LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.ENAME|| ' '||I.SAL);
          END LOOP;
             DBMS_OUTPUT.PUT_LINE(C1%ROWCOUNT);
          CLOSE C1;
      END;
      /     
          
12.WAQTD NAME AND SAL AND COMMISSION OF EMPLOYEES HAVING COMMISSION MORE     THAN SALARY 
      
     DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE COMM > SAL;
         BEGIN 
          OPEN C1;
         LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.ENAME|| ' '||I.SAL ||' '||I.COMM);
          END LOOP;
             DBMS_OUTPUT.PUT_LINE(C1%ROWCOUNT);
          CLOSE C1;
      END;
      /     


13.WAQTD EMPNO OF EMPLOYEES HIRED BEFORE THE YEAR 87.
     
       DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE HIREDATE < '01-JAN-1987' ;
         BEGIN 
          OPEN C1;
         LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.EMPNO);
          END LOOP;
             DBMS_OUTPUT.PUT_LINE(C1%ROWCOUNT);
          CLOSE C1;
      END;
      /     


14.WAQTD NAME AND JOB OF EMPLOYEES WORKING AS AN N ANALYST.
   
         DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE JOB IN('ANALYST') ;
         BEGIN 
          OPEN C1;
         LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.ENAME ||' '||I.JOB);
          END LOOP;
             DBMS_OUTPUT.PUT_LINE(C1%ROWCOUNT);
          CLOSE C1;
      END;
      /    

       
15.WAQTD NAME AND SAL  OF EMPS EARNING MORE THAN 2000 RUPEES PER MONTH 
     
        DECLARE 
          I EMP%ROWTYPE;
          CURSOR C1 IS SELECT * FROM EMP WHERE SAL > 2000 ;
         BEGIN 
          OPEN C1;
         LOOP 
             FETCH C1 INTO I;
             EXIT WHEN C1%NOTFOUND ;
             DBMS_OUTPUT.PUT_LINE(I.ENAME ||' '||I.SAL);
          END LOOP;
             DBMS_OUTPUT.PUT_LINE(C1%ROWCOUNT);
          CLOSE C1;
      END;
      /  
  